########################################################
# This is the core settings file for Elastic Beanstalk #
########################################################

option_settings:

# Tell nginx where to find us
  aws:elasticbeanstalk:container:python:
    WSGIPath: cobalt.wsgi:application

# static and media for nginx.
# EB messes up the media location. It won't use an absolute path.
# We can either put a relative path in here to correct it (ugly), or
# use sed to rewrite the config file and then restart nginx (even worse).
  aws:elasticbeanstalk:environment:proxy:staticfiles:
    /static: static
    /media: ../../../cobalt-media

# Set load balancer to Application type
  aws:elasticbeanstalk:environment:
    LoadBalancerType: application

# Use our own security group - required so we don't fail the first
# time we start. This way we can set security access before launching
# EB. Required for database and file system access.
# Note: we are using the same security group for test, UAT and prod
# which is not perfect, but better than the hassle of different groups.
# The DBs have different password so are not at risk. The file system
# is only storing images with unique names so also not a big risk.
# https://docs.aws.amazon.com/vpc/latest/userguide/VPC_SecurityGroups.html#CreatingSecurityGroups
# This has the massive added benefit that it is quick to terminate an
# environment. If the default security group is used then it must be
# removed from the main cobalt group prior to termination or the terminate
# command will run for about 30 minutes before failing with an error.
# In this approach it doesn't need to delete the security group so works
# quickly.
  aws:autoscaling:launchconfiguration:
    SecurityGroups: CobaltEBDefaultSecurityGroup

#  aws:elasticbeanstalk:healthreporting:system:
#    SystemType: enhanced

# Defaults and health settings
  aws:elasticbeanstalk:environment:process:default:
    DeregistrationDelay: '20'
    HealthCheckInterval: '15'
    HealthCheckPath: /accounts/login/
    HealthCheckTimeout: '5'
    HealthyThresholdCount: '3'
    UnhealthyThresholdCount: '5'
    Port: '80'
    Protocol: HTTP
    StickinessEnabled: 'true'
    MatcherHTTPCode: 200,301

# HTTPS including our certificate definition
  aws:elbv2:listener:443:
    DefaultProcess: default
    ListenerEnabled: 'true'
    Protocol: HTTPS
    SSLCertificateArns: arn:aws:acm:ap-southeast-2:730536189139:certificate/2cd9683c-74c0-4865-8090-b500483bb9c8
  aws:elbv2:listenerrule:allowhealth:
    PathPatterns: /health
    Priority: 1
    Process: health

  aws:elasticbeanstalk:sns:topics:
    Notification Endpoint: m@rkguthrie.com
    Notification Topic ARN: arn:aws:sns:ap-southeast-2:730536189139:EBEmails

# This sets up a rule for the load balancer to redirect all HTTP traffic to HTTPS
Resources:
 AWSEBV2LoadBalancerListener:
  Type: AWS::ElasticLoadBalancingV2::Listener
  Properties:
    LoadBalancerArn:
      Ref: AWSEBV2LoadBalancer
    Port: 80
    Protocol: HTTP
    DefaultActions:
      - Type: redirect
        RedirectConfig:
          Host: "#{host}"
          Path: "/#{path}"
          Port: "443"
          Protocol: "HTTPS"
          Query: "#{query}"
          StatusCode: "HTTP_301"
