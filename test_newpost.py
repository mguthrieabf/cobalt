# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

class TestPost():
  def setup_method(self, method):
    self.driver = webdriver.Chrome()
    self.vars = {}

  def teardown_method(self, method):
    self.driver.quit()

  def test_post(self):
    self.driver.get("http://127.0.0.1:8000/forums/post/new/")
    self.driver.set_window_size(1914, 1010)
    self.driver.find_element(By.ID, "id_forum").click()
    dropdown = self.driver.find_element(By.ID, "id_forum")
    dropdown.find_element(By.XPATH, "//option[. = 'Main Lobby']").click()
    self.driver.find_element(By.ID, "id_title").click()
    element = self.driver.find_element(By.CSS_SELECTOR, "#div_id_summary .note-btn-group:nth-child(4) .note-btn:nth-child(1)")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    element = self.driver.find_element(By.CSS_SELECTOR, "body")
    actions = ActionChains(self.driver)
    actions.move_to_element(element, 0, 0).perform()
    self.driver.find_element(By.ID, "id_title").send_keys("Title")
    self.driver.find_element(By.CSS_SELECTOR, "#div_id_summary .note-placeholder").click()
    element = self.driver.find_element(By.CSS_SELECTOR, "#div_id_text .note-btn-group:nth-child(4) .note-btn:nth-child(1)")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    element = self.driver.find_element(By.CSS_SELECTOR, "body")
    actions = ActionChains(self.driver)
    actions.move_to_element(element, 0, 0).perform()
    element = self.driver.find_element(By.CSS_SELECTOR, "#div_id_summary .note-editable")
    self.driver.execute_script("if(arguments[0].contentEditable === 'true') {arguments[0].innerText = '<p>Short</p>'}", element)
    self.driver.find_element(By.CSS_SELECTOR, "#div_id_text .note-placeholder").click()
    element = self.driver.find_element(By.CSS_SELECTOR, ".save")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    element = self.driver.find_element(By.CSS_SELECTOR, "#div_id_text .note-editable")
    self.driver.execute_script("if(arguments[0].contentEditable === 'true') {arguments[0].innerText = '<p>Long</p>'}", element)
    self.driver.find_element(By.CSS_SELECTOR, ".save").click()
